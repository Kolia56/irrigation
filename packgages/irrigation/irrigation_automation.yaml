automation:
  - id: c7d6782b-eb5c-43e0-84cf-5a4365bd779d
    alias: Irrigation zone switches
    description: "Master controller switch"
    variables:
      map_table:
        input_boolean.arrosage_master: binary_sensor.irrigation_unlimited_c1_m
      entity: '{{ map_table.get(trigger.entity_id, ''unknown'')}}'
    trigger:
    - platform: state
      entity_id:
      - input_boolean.arrosage_master
    condition: '{{ entity != ''unknown'' }}'
    action:
    - service: irrigation_unlimited.{{ iif(trigger.to_state.state == "off", "disable", "enable") }}
      data:
        entity_id: '{{entity}}'
    mode: queued
    max: 5

  - id: ad1617dd-c0ae-40d4-8421-08ae31f84cb5
    alias: Irrigation - Modification paramètres arrosage
    description: "Sequence 1 watering time set"
    trigger:
    - platform: state
      entity_id:
      - input_button.arrosage_reset
      id: reset
    - platform: state
      entity_id:
        - input_number.arrosage_variation    
      id: pct
    condition: []
    action:
      - choose:
        - conditions:
          - condition: trigger
            id: reset
          sequence:
            - service: input_number.set_value
              target:
                entity_id: input_number.arrosage_variation
              data:
                value: '100'
        - conditions:
          - condition: trigger
            id: pct
          sequence:
            - if:
                - condition: template
                  value_template: >
                    {{states("input_number.arrosage_variation") != "100.0" }}
              then:
                - service: irrigation_unlimited.adjust_time
                  data:
                    entity_id: binary_sensor.irrigation_unlimited_c1_m
                    sequence_id: 1
                    percentage: >
                      {{ states("input_number.arrosage_variation")}}
              else:
                - service: irrigation_unlimited.adjust_time
                  data:
                    entity_id: binary_sensor.irrigation_unlimited_c1_m
                    sequence_id: 1
                    reset:
    max: 5
    mode: queued

  - id: 670d8578-9b95-4538-89ff-3334ec429495
    alias: Arrosage Consommation de chaque circuit      
    description: ""
    # trace:
    #     stored_traces: 30    
    trigger:
      - platform: state
        entity_id:
          - switch.562
          - switch.564
          - switch.565
          - switch.566
          - switch.568
          - switch.569
          - switch.713
          - switch.714
          - switch.715
          - switch.716
          - switch.717
          - switch.718
          - switch.719
          - switch.720
    variables:
      indexes:
        562: "id2" # Kfé François
        564: "id3" # Serre
        565: "id4" # Haie rue
        568: "id5" # Cuisine grande maison
        569: "id6" # Pare terre Julie
        566: "id7" # Pelouse
        713: "id8" # Deux carrés
        714: "id9" # Un carré
        715: "id10" # Petits fruits
        716: "id11" # Haie Céanothe et fleurs
        717: "id12" # Pommiers
        718: "id13" # Haie Charme Hêtre pourpre
        719: "id15" # Haie du fond
        720: "id16" # Tilleul - Cerisier
      id: "{{trigger.entity_id.split('.')[1]}}" # entity index (id1, id2, ...)
      entity: "{{indexes.get(id, 'unknown')}}"
    condition: "{{ entity != 'unknown' and trigger.from_state.state != 'unavailable' }}"
    action:
      - choose:
        - conditions:
            - condition: template
              value_template: >
                {{states(trigger.entity_id) == "on"}}
          sequence:
            - service: utility_meter.reset
              data: {}
              target:
                # - entity_id: "select.water_meter_  ~ entity"
                entity_id: 
                  - '{{"select.water_meter_" ~ entity}}'
                  - select.water_meter_arrosage
        - conditions:
            - condition: template
              value_template: >
                {{states(trigger.entity_id) == "off"}}
          sequence:
            - service: input_number.set_value
              data:
                value: >
                  {{states("sensor.water_meter_" ~ entity ~ "_std") | round(3)}}
              target:
                entity_id: "input_number.water_{{entity}}" 
    mode: queued
    max: 20

  - id: c6b40384-a7bd-4cf9-82f8-fc07f15905e5
    alias: Smart Irrigation adjustment
    description: Adjust watering times based on ET - Bucket reset
    trigger:
      - platform: template
        value_template: >
          {{ now().timestamp() | timestamp_custom('%H:%M') 
            == (state_attr('input_datetime.watering_s1_start', 'timestamp') - 120) | timestamp_custom('%H:%M', false) }}
        id: watering_duration_compute
      - platform: template
        value_template: >
          {{ now().timestamp() | timestamp_custom('%H:%M') 
            == (state_attr('input_datetime.watering_s1_start', 'timestamp') - 60) | timestamp_custom('%H:%M', false) }}
        id: watering_duration_set
      - platform: event
        event_type: irrigation_unlimited_finish
        id: "Finished"        
    condition:
      condition: and
      conditions:
        - "{{ states('sensor.smart_irrigation_id7_daily_adjusted_run_time') | float(-1) >= 0 }}"
    action:
      - choose:
        - conditions:
          - condition: trigger
            id: watering_duration_compute
          sequence:
          - service: smart_irrigation.smart_irrigation_id7_calculate_daily_adjusted_run_time
            data: {}
          # - service: notify.persistent_notification
          #   data:
          #     title: "Irrigation - calcul du temps d'arrosage"
          #     message: |
          #       Time: {{ as_local(now()).strftime('%c') }}            
        - conditions:
          - condition: trigger
            id: watering_duration_set
          sequence:
          - service: input_text.set_value
            target: 
              entity_id: input_text.smart_irrigation_id7_adjust_time
            data: # 2600 secondes = 00:40:00 nominal duration for lawn watering
            # all other circuits (drip line) are proportional to lawn watering
              value: >
                {{ timedelta(seconds=states('sensor.smart_irrigation_id7_daily_adjusted_run_time') | int(0)) }} - 
                {{(states('sensor.smart_irrigation_id7_daily_adjusted_run_time')| int(0) / 2600) | multiply (100) | round (0) }}%
          # - service: notify.persistent_notification
          #   data:
          #     title: "Irrigation - application du nouveau temps d'arrosage"
          #     message: |
          #       Time: {{ as_local(now()).strftime('%c') }}            
          - condition: state
            entity_id: input_boolean.irrigation_duration_smart
            state: "on"
          - service: input_number.set_value
            target:
              entity_id: input_number.arrosage_variation
            data:
              value: >
                {% set pct = (states('sensor.smart_irrigation_id7_daily_adjusted_run_time')| int(0) / 2600) | multiply (100) | round (0) %}
                {% if pct >= 150 %} then
                  150
                {% elif pct <= 5 %}
                  0
                {% else %}
                  {{pct}}
                {% endif %}
        - conditions:
          - condition: and
            conditions:
              - condition: trigger
                id: Finished
              - condition: template
                value_template: >
                  {{trigger.event.data.schedule.index is integer and trigger.event.data.schedule.index + 1 == 1 }}
              - condition: numeric_state
                above: '0'
                entity_id: sensor.smart_irrigation_id7_daily_adjusted_run_time
          sequence:
          - service: smart_irrigation.smart_irrigation_id7_reset_bucket
          - service: smart_irrigation.smart_irrigation_test_reset_bucket
          - service: notify.persistent_notification
            data:
              title: "Irrigation - Bucket reset"
              message: |
                Time: {{ as_local(now()).strftime('%c') }}             

    mode: single

  - id: 1962673f-0796-4a3c-8f01-d0a9cfa78213
    alias: irrigation unlimited - Schedule s1, update start time
    trigger:
      - platform: state
        entity_id: 
          - input_datetime.watering_s1_start
      - platform: homeassistant
        event: start
    action:
      service: irrigation_unlimited.load_schedule
      data:
        schedule_id: s1
        time: "{{states('input_datetime.watering_s1_start')}}"
    mode: single

  - id : 7d5bbbb7-c0bc-4ad8-a772-253e81b0db03
    alias: "Irrigation réglage fréquence pompe"
    description: ""
    variables:
      relay_state:
        15: ["off","off","off"]
        20: ["on","off","off"]
        25: ["off","on","off"]
        30: ["on","on","off"]
        35: ["off","off","on"]
        40: ["on","off","on"]
        45: ["off","on","on"]
        50: ["on","on","on"]
      # frequency: "{{trigger.to_state.state}}"
      frequency: >
        {% if trigger.entity_id != "number.727" %}
          50
        {% else %}
          {{trigger.to_state.state}}
        {% endif %}
      pwm0: '{{relay_state.get(frequency,"unknown")[0]}}'
      pwm1: '{{relay_state.get(frequency,"unknown")[1]}}'
      pwm2: '{{relay_state.get(frequency,"unknown")[2]}}'
    trigger:
      - platform: state
        entity_id:
          number.727
        id: pwm
      - platform: homeassistant
        event: start
        id: start
          # - input_number.pompe_pwm
      # - platform: numeric_state
      #   id: pump_throughput
      #   entity_id: sensor.pressostat_power
      #   above: 100
    # condition: >
    #     {{ frequency != "unavailable" }}
    action:
      - choose:
        - conditions:
          - condition: trigger
            id: pwm
          sequence:
          - service: switch.turn_{{pwm0}}
            data: {}
            target: 
              entity_id: switch.1000
          - service: switch.turn_{{pwm1}}
            data: {}
            target: 
              entity_id: switch.1001
          - service: switch.turn_{{pwm2}}
            data: {}
            target: 
              entity_id: switch.1002
        - conditions:
          - condition:
            - condition: trigger
              id: start
          sequence:
          - service: number.set_value
            data:
              value: "{{frequency}}"
            target:
              entity_id: number.727
    # trace:
    #     stored_traces: 20     
    mode: queued
    max: 5

  - id: a7eb6185-fdc2-4907-8f53-88f4a6fbac0b
    alias: "Irrigation régulation pompe"
    description: "Réglage de la fréquence d'alimentation de la pompe en fonction du circuit d'arrosage"
    variables:
      low_pressure_circuit: [562, 564, 565, 569, 713, 714, 715, 716, 717, 718, 719, 720]
      medium_pressure_circuit: [566]
      id: "{{trigger.entity_id.split('.')[1]}}"
      frequency: >
        {% if id in low_pressure_circuit %}
          35
        {% elif id in medium_pressure_circuit %}
          45
        {% else %}
          50
        {% endif %}  
    trigger:
      - platform: state
        id: arrosage
        entity_id: 
          - switch.562
          - switch.564
          - switch.565
          - switch.566
          - switch.569
          - switch.713
          - switch.714
          - switch.715
          - switch.716
          - switch.717
          - switch.718
          - switch.719
          - switch.720
    condition: >
      {{states("number.727") != "unavailable"}}
    action:
      - service: number.set_value
        data:
          value: "{{frequency}}"
        target:
          entity_id: number.727
    mode: queued
    max: 15

  # - choose:
  #     - conditions:
  #         - condition: template
  #           value_template: "{% if id in low_pressure_circuit %}"
  #       sequence:
  #         - service: input_number.set_value
  #           data:
  #             value: 40
  #           target:
  #             entity_id: input_number.pompe_pwm
  #     - conditions:
  #         - condition: template
  #           value_template: " {% if id in high_pressure_circuit %}"
  #       sequence:
  #         - service: input_number.set_value
  #           data:
  #             value: 45
  #           target:
  #             entity_id: input_number.pompe_pwm

        # - conditions: 
        #   - condition: trigger
        #     id: start_time
        #   sequence:
        #     - service: input_datetime.set_datetime
        #       data:
        #         time: >
        #           {{ ((state_attr('input_datetime.watering_s1_start', 'timestamp') - 60)  | timestamp_custom(local=False))[-8:]}}
        #       target:
        #         entity_id: input_datetime.watering_s1_compute
        #     - service: input_text.set_value
        #       data:
        #         value: >
        #           {{states("input_datetime.watering_s1_compute")}}
        #       target:
        #         entity_id: input_text.watering_s1_compute                
        #     - service: input_datetime.set_datetime
        #       data:
        #         time: >
        #           {{ ((state_attr('input_datetime.watering_s1_start', 'timestamp') - 40)  | timestamp_custom(local=False))[-8:]}}
        #       target:
        #         entity_id: input_datetime.watering_s1_set
        #     - service: input_text.set_value
        #       data:
        #         value: >
        #           {{states("input_datetime.watering_s1_set")}}
        #       target:
        #         entity_id: input_text.watering_s1_set     


  # - id: 357e1d97-e732-4c66-8ec7-e0a69e00d193
  #   alias: Irrigation - Vanne durée-v2
  #   description: ''
  #   trigger:
  #   - platform: state
  #     entity_id:
  #     - input_number.duree_arrosage
  #   condition: []
  #   action:
  # - if:
  #     - condition: template
  #       value_template: >
  #         {{states("input_number.duree_arrosage" != 100 )}}
  #   then:
  #     - service: irrigation_unlimited.adjust_time
  #       data: 
  #         entity_id: binary_sensor.irrigation_unlimited_c1_m
  #         actual: '{{ states(''input_number.duree_arrosage'')|int|multiply(60)|timestamp_custom(''%H:%M'',
  #           false) }}'
  #   else:
  #     - service: irrigation_unlimited.adjust_time
  #       data: 
  #         entity_id: binary_sensor.irrigation_unlimited_c1_m
  #       reset:
  #   mode: single

  # {{states("sensor.water_meter_arrosage_" ~ entity ~ "_std") | round(3)}}

  # - id: a43d818a-787e-41ba-b5d3-f5129599168e
  #   alias: "Irrigation Unlimited notification start stop - Bucket RAZ"
  #   trigger:
  #     # - platform: event
  #     #   event_type: irrigation_unlimited_start
  #     #   id: "Starting"
  #     - platform: event
  #       event_type: irrigation_unlimited_finish
  #       id: "Finished"
  #   action:
  #     # - service: notify.persistent_notification
  #     #   data:
  #     #     title: "Irrigation Unlimited - {{trigger.id}}"
  #     #     message: |
  #     #       Time: {{ as_local(trigger.event.time_fired).strftime('%c') }}
  #     #       Controller: {{ trigger.event.data.controller.index + 1 }} {{ trigger.event.data.controller.name }}
  #     #       Sequence: {{ trigger.event.data.sequence.index + 1 }} {{ trigger.event.data.sequence.name }}
  #     #       Schedule: {% if trigger.event.data.schedule.index is integer %}{{ trigger.event.data.schedule.index + 1 }} {{ trigger.event.data.schedule.name }}{% else %}Manual{% endif %}
  #     #       Duration: {{ timedelta(seconds=trigger.event.data.run.duration) }}
  #     - condition: and
  #       conditions:
  #         - condition: trigger
  #           id: Finished
  #         - condition: template
  #           value_template: >
  #             {{trigger.event.data.schedule.index is integer and trigger.event.data.schedule.index + 1 == 1 }}
  #         - condition: numeric_state
  #           above: '0'
  #           entity_id: sensor.smart_irrigation_id7_daily_adjusted_run_time
  #     - service: smart_irrigation.smart_irrigation_id7_reset_bucket
  #     - service: smart_irrigation.smart_irrigation_test_reset_bucket
  #   mode: single

      # - service: irrigation_unlimited.adjust_time
      #   data:
      #     actual: "{{ timedelta(seconds=states('sensor.smart_irrigation_pelouse_daily_adjusted_run_time') | int(0)) }}"

          # -------------------------------------------------------------------
          # Please see documentation regarding the adjust_time service call.
          # Choose an option below. Comment out/delete as needed. This will NOT work as is.
          # 1. Adjust a single zone. Change the zone as required
          # entity_id: binary_sensor.irrigation_unlimited_c1_z1
          # 2. Adjust a sequence. Change the sequence_id as required
          # entity_id: binary_sensor.irrigation_unlimited_c1_m
          # sequence_id: 1
          # -------------------------------------------------------------------

      # - service: irrigation_unlimited.adjust_time
      #   data:
      #     entity_id: binary_sensor.irrigation_unlimited_c1_m
      #     sequence_id: 2
      #     zones: 3
      #     actual: >
      #       {{ timedelta(seconds=states('sensor.smart_irrigation_id7_daily_adjusted_run_time') | int(0)) }}   

  # - id: 21cb9d35-de90-42e7-bc1a-6d3399f73423
  #   alias: Smart Irrigation reset bucket
  #   description: Resets the Smart Irrigation bucket after watering
  #   trigger:
  #     - platform: state
  #       entity_id:
  #         # Add Irrigation Unlimited sensors here
  #         # - binary_sensor.irrigation_unlimited_c1_m
  #         - switch.566
  #       from: "on"
  #       to: "off"
  #   condition:
  #     - condition: numeric_state
  #       above: '0'
  #       entity_id: sensor.smart_irrigation_id7_daily_adjusted_run_time
  #   action:
  #     - service: smart_irrigation.smart_irrigation_id7_reset_bucket
  #     - service: smart_irrigation.smart_irrigation_test_reset_bucket

  # - id: 98715c80-c35c-4f1b-9fc4-6b87b2cfd18b
  #   alias: "Arrosage - Surveillance surconsommation"
  #   trigger:
  #   - platform: state
  #     entity_id: sensor.556
